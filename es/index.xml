<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>inkel</title>
    <link>https://inkel.github.io/es/</link>
    <description>Recent content on inkel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 30 Apr 2020 16:29:01 -0300</lastBuildDate>
    
	<atom:link href="https://inkel.github.io/es/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Trabajando en Theorem: un día típico</title>
      <link>https://inkel.github.io/es/posts/dia-trabajo-tipico-theorem/</link>
      <pubDate>Thu, 30 Apr 2020 16:29:01 -0300</pubDate>
      
      <guid>https://inkel.github.io/es/posts/dia-trabajo-tipico-theorem/</guid>
      <description>Comencé a trabajar en CitrusbyteTheorem hace 9 años, y desde el día 1 ha sido una experiencia totalmente remota. Con los años aprendí un montón acerca de cómo organizarme para encarar cada día de trabajo pero nunca pensé mucho al respecto, hasta ayer, cuando mientras estaba entrevistando a un candidato me preguntó cómo es un típico día de trabajo en Theorem. Este post intentará brindar una respuesta.
Antes que nada, una aclaración: bajo ningún concepto hablo en nombre de Theorem o alguno de mis compañeros, son enteramente mis experiencias personal y no reflejan la realidad de toda la maravillosa gente que trabaja en esta empresa.</description>
    </item>
    
    <item>
      <title>Alias en Git</title>
      <link>https://inkel.github.io/es/posts/git-alias/</link>
      <pubDate>Wed, 22 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://inkel.github.io/es/posts/git-alias/</guid>
      <description>Una de las mejores cosas que tiene Git es la posibilidad de definir alias de comandos, para evitar tener que escribir de manera repetitiva el mismo comando. Un ejemplo de esto son los casi típicos st, co y ci, versiones reducidas de status, checkout y commit respectivamente.
Definir un alias en Git es muy sencillo, simplemente se ejecuta:
  git config --global alias.st status  git config --global alias.ci commit  git config --global alias.</description>
    </item>
    
    <item>
      <title>git add --patch</title>
      <link>https://inkel.github.io/es/posts/git-add-patch/</link>
      <pubDate>Tue, 07 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://inkel.github.io/es/posts/git-add-patch/</guid>
      <description>Aprovechando mi temporada de tiempo libre me entretuve leyendo algunos artículos de Ryan Tomayko y hubo uno que especialmente llamó mi atención: The Thing About Git. En este artículo Ryan presenta una de las tantas mejoras que Git tiene respecto a otros VCS que yo desconocía y que la podría haber utilizado cientos de veces y ahora sin dudas haré.
Quienes tengan más experiencia en Git o hayan leído la página del manual de git-add(1) seguramente estarán al tanto del modificador --patch, que permite resolver el caso cuando modificamos un archivo con dos cambios no relacionados entre si y queremos hacer commits separados.</description>
    </item>
    
  </channel>
</rss>